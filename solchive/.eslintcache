[{"C:\\Users\\whaeun25\\Desktop\\solchive\\solchive\\solchive\\solchive\\src\\index.js":"1","C:\\Users\\whaeun25\\Desktop\\solchive\\solchive\\solchive\\solchive\\src\\reportWebVitals.js":"2","C:\\Users\\whaeun25\\Desktop\\solchive\\solchive\\solchive\\solchive\\src\\App.js":"3","C:\\Users\\whaeun25\\Desktop\\solchive\\solchive\\solchive\\solchive\\src\\components\\Footer.js":"4","C:\\Users\\whaeun25\\Desktop\\solchive\\solchive\\solchive\\solchive\\src\\components\\Header.js":"5","C:\\Users\\whaeun25\\Desktop\\solchive\\solchive\\solchive\\solchive\\src\\components\\ProjectList.js":"6","C:\\Users\\whaeun25\\Desktop\\solchive\\solchive\\solchive\\solchive\\src\\components\\CreateProject.js":"7","C:\\Users\\whaeun25\\Desktop\\solchive\\solchive\\solchive\\solchive\\src\\components\\Project.js":"8","C:\\Users\\whaeun25\\Desktop\\solchive\\solchive\\solchive\\solchive\\src\\components\\ProjectListItem.js":"9","C:\\Users\\whaeun25\\Desktop\\solchive\\solchive\\solchive\\solchive\\src\\components\\DeleteProject.js":"10"},{"size":564,"mtime":1609497659246,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1609497452671,"results":"13","hashOfConfig":"12"},{"size":612,"mtime":1609497659232,"results":"14","hashOfConfig":"12"},{"size":414,"mtime":1609497659237,"results":"15","hashOfConfig":"12"},{"size":584,"mtime":1609497659239,"results":"16","hashOfConfig":"12"},{"size":845,"mtime":1609506478790,"results":"17","hashOfConfig":"12"},{"size":5977,"mtime":1609497659234,"results":"18","hashOfConfig":"12"},{"size":3027,"mtime":1609497659240,"results":"19","hashOfConfig":"12"},{"size":1250,"mtime":1609497659244,"results":"20","hashOfConfig":"12"},{"size":677,"mtime":1609506510618,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"7ah1i",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\whaeun25\\Desktop\\solchive\\solchive\\solchive\\solchive\\src\\index.js",[],["47","48"],"C:\\Users\\whaeun25\\Desktop\\solchive\\solchive\\solchive\\solchive\\src\\reportWebVitals.js",[],"C:\\Users\\whaeun25\\Desktop\\solchive\\solchive\\solchive\\solchive\\src\\App.js",[],"C:\\Users\\whaeun25\\Desktop\\solchive\\solchive\\solchive\\solchive\\src\\components\\Footer.js",[],"C:\\Users\\whaeun25\\Desktop\\solchive\\solchive\\solchive\\solchive\\src\\components\\Header.js",[],"C:\\Users\\whaeun25\\Desktop\\solchive\\solchive\\solchive\\solchive\\src\\components\\ProjectList.js",[],"C:\\Users\\whaeun25\\Desktop\\solchive\\solchive\\solchive\\solchive\\src\\components\\CreateProject.js",["49"],"import React, { Component } from 'react';\r\n\r\nclass CreateProject extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: \"\",\r\n            team: \"\",\r\n            period: \"\",\r\n            framework: \"\",\r\n            body_text: \"\",\r\n            body_images: \"\",\r\n            summary: \"\",\r\n            git_url: \"\"\r\n        };\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n        this.handleValueChange = this.handleValueChange.bind(this);\r\n        this.addProject = this.addProject.bind(this);\r\n    }\r\n\r\n    handleFormSubmit(e) {\r\n        e.preventDefault();\r\n        this.addProject();\r\n        window.location.href = '/projects';\r\n    }\r\n\r\n    handleValueChange(e) {\r\n        // 불변성 유지\r\n        let nextState = {};\r\n        nextState[e.target.name] = e.target.value;\r\n        this.setState(nextState);\r\n    }\r\n\r\n    addProject = async () => {\r\n        // TODO: url 받아서 채워넣기\r\n        const url = 'http://localhost:5000/api/project';\r\n        let formData = {\r\n            title: this.state.title,\r\n            team: this.state.team,\r\n            period: this.state.period,\r\n            framework: this.state.framework,\r\n            body_text: this.state.body_text,\r\n            body_images: this.state.body_images,\r\n            summary: this.state.summary,\r\n            git_rul: this.state.git_rul\r\n        };\r\n        // 데이터 요청\r\n        let res = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(formData)\r\n        }).then((res) => {\r\n            if (res.ok) return res.json();\r\n            throw new Error('error');\r\n        }).then((data) => {\r\n            return data;\r\n        }).catch((error) => {\r\n            return console.log(error.message);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const formStyle = {\r\n            width: \"82rem\",\r\n            margin: \"15px auto\",\r\n            padding: \"20px\"\r\n        }\r\n\r\n        const wrapperStyle = {\r\n            width: \"90rem\",\r\n            margin: \"0 auto\",\r\n        }\r\n\r\n        const textAreaStyle = {\r\n            display: \"block\",\r\n            margin: \"15px\",\r\n        }\r\n\r\n        const btnDivStyle = {\r\n            margin: \"5px\",\r\n            marginRight: \"15px\",\r\n            float: \"right\",\r\n        }\r\n\r\n        const btnStyle = {\r\n            margin: \"5px\",\r\n        }\r\n\r\n        return (\r\n            <div style={wrapperStyle}>\r\n                <h3>프로젝트 생성하기</h3>\r\n                <form style={formStyle} onSubmit={this.handleFormSubmit} method=\"post\"> \r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>프로젝트 제목</label>\r\n                            <input type=\"text\" name=\"title\" className=\"form-control\" placeholder=\"제목\" value={this.state.title} onChange={this.handleValueChange}/>\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>사용 프레임워크</label>\r\n                            <input type=\"text\" name=\"framework\" value={this.state.framework} className=\"form-control\" placeholder=\"쉼표(,)로 구분하여 입력해 주세요.\" onChange={this.handleValueChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>팀명</label>\r\n                            <input type=\"text\" name=\"team\" className=\"form-control\" placeholder=\"팀명\" value={this.state.team} onChange={this.handleValueChange}/>\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>프로젝트 Github URL</label>\r\n                            <input type=\"text\" name=\"git_url\" value={this.state.git_url} className=\"form-control\" placeholder=\"Github URL\" onChange={this.handleValueChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>진행 기간</label>\r\n                            <input type=\"text\" name=\"period\" className=\"form-control\" placeholder=\"제목\" value={this.state.period} onChange={this.handleValueChange}/>\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>대표 이미지</label>\r\n                            <input type=\"text\" name=\"body_images\" value={this.state.body_images} className=\"form-control\" onChange={this.handleValueChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\" style={textAreaStyle}>\r\n                        <label>프로젝트에 대해 한 문장으로 간략하게 설명해 주세요.</label>\r\n                        <textarea className=\"form-control\" name=\"summary\" value={this.state.summary} rows=\"1\" onChange={this.handleValueChange}></textarea>\r\n                    </div>\r\n                    <div className=\"form-group\" style={textAreaStyle}>\r\n                        <label>프로젝트에 대해 자세하게 설명해 주세요.</label>\r\n                        <textarea className=\"form-control\" name=\"body_text\" value={this.state.body_text} rows=\"20\" onChange={this.handleValueChange}></textarea>\r\n                    </div>\r\n                    <div style={btnDivStyle}>\r\n                        <button type=\"submit\" className=\"btn btn-primary\" style={btnStyle}>작성하기!</button>\r\n                        <button type=\"button\" className=\"btn btn-secondary\">취소</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateProject;","C:\\Users\\whaeun25\\Desktop\\solchive\\solchive\\solchive\\solchive\\src\\components\\Project.js",["50","51"],"import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport ProjectListItem from './ProjectListItem';\r\nimport DeleteProject from './DeleteProject';\r\n\r\nclass Project extends Component {\r\n    state = {\r\n        id: 1,\r\n        title: \"솔룩스 프로젝트 아카이빙 플랫폼, Solchive\",\r\n        team: \"솔잼\",\r\n        period: \"2020-12-29 ~ 2020-1-12\",\r\n        framework: \"React, Node.js(Express)\",\r\n        body_text: \"솔룩스에서 진행한 역대 프로젝트를 모두 확인할 수 있는 웹 플랫폼입니다.\",\r\n        body_content: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, \\\r\n        sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \\\r\n        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi \\\r\n        ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit \\\r\n        in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \\\r\n        Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia \\\r\n        deserunt mollit anim id est laborum.\",\r\n        body_images: \"\"\r\n    }\r\n\r\n    \r\n\r\n    // componentDidMount() {\r\n    //     this.callAPI().then(\r\n    //         res => {\r\n    //             this.setState({project: res[0]});\r\n    //     }).catch(\r\n    //         error => { console.log(error);\r\n    //     });\r\n    // }\r\n\r\n    // callAPI = async () => {\r\n    //     const { id } = this.props.match.params;\r\n    //     const res = await fetch(`/api/articles/${id}`);\r\n    //     const body = await res.json();\r\n    //     return body;\r\n    // }\r\n\r\n    render() {\r\n\r\n        return (\r\n            \r\n            <div className=\"body--wrapper\">\r\n                <div> \r\n                    <DeleteProject id = {this.state.id}/>\r\n                </div>\r\n                <div className=\"description--section\">\r\n                    <div className=\"body--title\">\r\n                        <h1>{this.state.title}</h1>\r\n                    </div>\r\n                    { /* 이미지 들어갈 부분 */ }\r\n                    <div className=\"body--subinfo\">\r\n                        <span>{this.state.team}</span>\r\n                        <span>{this.state.period}</span>\r\n                    </div>\r\n                    <div className=\"body--framework\">\r\n                        <span>사용 프레임워크</span>\r\n                        <span>{this.state.framework}</span>\r\n                    </div>\r\n                    <div className=\"body--short\">\r\n                        <p>{this.state.title} 한줄소개 👀</p>\r\n                        <p>{this.state.body_text}</p>\r\n                    </div>\r\n                    <div className=\"body--content\">\r\n                        <p>{this.state.body_content}</p>\r\n                    </div>\r\n                    <div className=\"body--comments\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"image--section\">\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Project;","C:\\Users\\whaeun25\\Desktop\\solchive\\solchive\\solchive\\solchive\\src\\components\\ProjectListItem.js",["52","53"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass ProjectListItem extends Component {\r\n    render() {\r\n        const { id, title, team, period, body_text, body_images } = this.props.info;\r\n        return (\r\n            <div className=\"project--item\">\r\n                <Link to={`/projects/${id}`}>\r\n                    <div className=\"project--image--wrapper\">\r\n                        <div className=\"project--image\">\r\n                            <div className=\"centered\">\r\n                                <img src=\"background.jpg\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"project-textarea\">\r\n                        <h4 className=\"project--title\">{title}</h4>\r\n                        <div className=\"project--details\">\r\n                            <span className=\"project--team\">{team}</span>\r\n                            <span className=\"project--period\">{period}</span>\r\n                        </div>\r\n                        <p className=\"project--description\">{body_text}</p>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectListItem;","C:\\Users\\whaeun25\\Desktop\\solchive\\solchive\\solchive\\solchive\\src\\components\\DeleteProject.js",[],["54","55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":48,"column":13,"nodeType":"62","messageId":"63","endLine":48,"endColumn":16},{"ruleId":"60","severity":1,"message":"64","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":23},{"ruleId":"65","severity":1,"message":"66","line":14,"column":23,"nodeType":"67","messageId":"68","endLine":20,"endColumn":46},{"ruleId":"60","severity":1,"message":"69","line":5,"column":53,"nodeType":"62","messageId":"63","endLine":5,"endColumn":64},{"ruleId":"70","severity":1,"message":"71","line":12,"column":33,"nodeType":"72","endLine":12,"endColumn":60},{"ruleId":"56","replacedBy":"73"},{"ruleId":"58","replacedBy":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","'ProjectListItem' is defined but never used.","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","'body_images' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["75"],["76"],"no-global-assign","no-unsafe-negation"]