[{"/Users/soo/dev/solchive/solchive/src/index.js":"1","/Users/soo/dev/solchive/solchive/src/reportWebVitals.js":"2","/Users/soo/dev/solchive/solchive/src/App.js":"3","/Users/soo/dev/solchive/solchive/src/components/sections/Footer.js":"4","/Users/soo/dev/solchive/solchive/src/components/sections/Header.js":"5","/Users/soo/dev/solchive/solchive/src/components/Projects/Project.js":"6","/Users/soo/dev/solchive/solchive/src/components/Projects/UpdateProject/UpdateProject.js":"7","/Users/soo/dev/solchive/solchive/src/components/Projects/DeleteProject/DeleteProject.js":"8","/Users/soo/dev/solchive/solchive/src/components/Projects/CreateProject/CreateProject.js":"9","/Users/soo/dev/solchive/solchive/src/components/Main/ProjectList.js":"10","/Users/soo/dev/solchive/solchive/src/components/Main/ProjectListItem.js":"11","/Users/soo/dev/solchive/solchive/src/components/Auth/Login.js":"12","/Users/soo/dev/solchive/solchive/src/components/Sections/Footer.js":"13","/Users/soo/dev/solchive/solchive/src/components/Sections/Header.js":"14","/Users/soo/dev/solchive/solchive/src/components/Main/Main.js":"15","/Users/soo/dev/solchive/solchive/src/components/Main/MainHeader.js":"16","/Users/soo/dev/solchive/solchive/src/components/Main/ProjectWrapperByYear.js":"17","/Users/soo/dev/solchive/solchive/src/components/Projects/Question/Question.js":"18","/Users/soo/dev/solchive/solchive/src/components/Projects/QuestionIndex/QuestionIndex.js":"19","/Users/soo/dev/solchive/solchive/src/components/Projects/Impression/ImpressionList.js":"20"},{"size":544,"mtime":1609946573742,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1609946573742,"results":"23","hashOfConfig":"22"},{"size":880,"mtime":1611205728965,"results":"24","hashOfConfig":"22"},{"size":331,"mtime":1611204942996,"results":"25","hashOfConfig":"22"},{"size":705,"mtime":1611206226063,"results":"26","hashOfConfig":"22"},{"size":3742,"mtime":1611992207223,"results":"27","hashOfConfig":"22"},{"size":11426,"mtime":1611212573776,"results":"28","hashOfConfig":"22"},{"size":606,"mtime":1611203944164,"results":"29","hashOfConfig":"22"},{"size":8345,"mtime":1611992667713,"results":"30","hashOfConfig":"22"},{"size":2078,"mtime":1611943652583,"results":"31","hashOfConfig":"22"},{"size":1422,"mtime":1611246896660,"results":"32","hashOfConfig":"22"},{"size":3516,"mtime":1611209782778,"results":"33","hashOfConfig":"22"},{"size":331,"mtime":1611204942996,"results":"34","hashOfConfig":"22"},{"size":705,"mtime":1611206226063,"results":"35","hashOfConfig":"22"},{"size":356,"mtime":1611206263378,"results":"36","hashOfConfig":"22"},{"size":612,"mtime":1611212587458,"results":"37","hashOfConfig":"22"},{"size":771,"mtime":1611302319999,"results":"38","hashOfConfig":"22"},{"size":732,"mtime":1611310173535,"results":"39","hashOfConfig":"22"},{"size":1122,"mtime":1611337698465,"results":"40","hashOfConfig":"22"},{"size":954,"mtime":1611993577059,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1gwnhm9",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/soo/dev/solchive/solchive/src/index.js",[],["88","89"],"/Users/soo/dev/solchive/solchive/src/reportWebVitals.js",[],"/Users/soo/dev/solchive/solchive/src/App.js",[],"/Users/soo/dev/solchive/solchive/src/components/sections/Footer.js",[],"/Users/soo/dev/solchive/solchive/src/components/sections/Header.js",[],"/Users/soo/dev/solchive/solchive/src/components/Projects/Project.js",["90","91"],"/Users/soo/dev/solchive/solchive/src/components/Projects/UpdateProject/UpdateProject.js",["92","93","94","95"],"import React, { Component, createRef } from 'react';\nimport { post } from 'axios';\nimport style from './UpdateProject.module.css';\n\nclass UpdateProject extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            id: \"\",\n            title: \"\",\n            framework: \"\",\n            team: \"\",\n            git_url: \"\",\n            period: \"\",\n            body_images: [],\n            summary: \"\",\n            body_text: \"\",\n            name1: \"\",\n            comment1: \"\",\n            name2: \"\",\n            comment2: \"\",\n            name3: \"\",\n            comment3: \"\",\n            name4: \"\",\n            comment4: \"\",\n            name5: \"\",\n            comment5: \"\",\n            index: 1,\n            loginresult: false,\n        }\n        console.log(this.state);\n        \n        this.handleFileChange = this.handleFileChange.bind(this);\n        this.handleFormModifySubmit = this.handleFormModifySubmit.bind(this);\n        this.fileInput = React.createRef();\n        this.handleValueChange = this.handleValueChange.bind(this);\n        this.updateProject = this.updateProject.bind(this);\n    }\n\n    componentDidMount(){\n\n        this.callAPI().then(\n            res => {\n                this.setState(res[0]);\n                console.log(res[0]);\n            }\n        ).catch(\n            error => {console.log(error);}\n        );\n\n        this.chkId().catch(\n            error => { console.log(error);\n        });\n\n    }\n\n    callAPI = async () => {\n        const { id } = this.props.match.params;\n        const res = await fetch(`/api/project/${id}`);\n        const body = await res.json();\n        return body;\n    }\n\n    chkId = async () => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n        };\n        fetch(\"http://localhost:5000/chkserver\", requestOptions)\n        .then(res => {\n            console.log(res);\n            return res.json();\n        })\n        .then(responseData => {\n            console.log(responseData);\n            this.setState({\n                loginresult: responseData.loginresult,\n            });\n            if(this.state.loginresult === false){\n                alert(\"로그인 후 이용해 주시길 바랍니다. 감사합니다.\");\n                window.location.href = '/login';\n            }\n        }).catch(\n            error => { console.log(error);\n        });\n        console.log(this.state.loginresult);\n    }\n\n    /*\n    componentDidMount(){\n\n        this.setState({\n            id: this.props.location.state.id,\n            title: this.props.location.state.title,\n            framework: this.props.location.state.framework,\n            team: this.props.location.state.team,\n            git_url: this.props.location.state.git_url,\n            period: this.props.location.state.period,\n            body_images: this.props.location.state.body_images,\n            summary: this.props.location.state.summary,\n            body_text: this.props.location.state.body_text,\n            name1: this.props.location.name1,\n            comment1: this.props.location.state.comment1,\n            name2: this.props.location.name2,\n            comment2: this.props.location.state.comment2,\n            name3: this.props.location.name3,\n            comment3: this.props.location.state.comment3,\n            name4: this.props.location.name4,\n            comment4: this.props.location.state.comment4,\n            name5: this.props.location.name5,\n            comment5: this.props.location.state.comment5,\n            loginresult: this.props.location.state.loginresult,\n        })\n    }\n    */\n\n    handleFileChange(e) {\n        this.setState({\n            body_images: e.target.files[0],\n        });\n    }\n\n    handleFormModifySubmit(e){\n        e.preventDefault();\n        this.updateProject();\n        alert(\"수정 완료되었습니다.\");\n        window.location.href = '/';\n    }\n\n    handleValueChange(e) {\n        let nextState = {};\n        nextState[e.target.name] = e.target.value;\n        this.setState(nextState);\n        console.log(this.state);\n    }\n\n    \n    updateProject = async () => {\n\n        const url = 'http://localhost:5000/api/update';\n\n        const formData = new FormData();\n        formData.append('id', this.state.id);\n        formData.append('title', this.state.title);\n        formData.append('team', this.state.team);\n        formData.append('period', this.state.period);\n        formData.append('framework', this.state.framework);\n        formData.append('body_text', this.state.body_text);\n        formData.append('body_images', this.state.body_images);\n        formData.append('summary', this.state.summary);\n        formData.append('git_url', this.state.git_url);\n        formData.append('name1', this.state.name1);\n        formData.append('comment1', this.state.comment1);\n        formData.append('name2', this.state.name2);\n        formData.append('comment2', this.state.comment2);\n        formData.append('name3', this.state.name3);\n        formData.append('comment3', this.state.comment3);\n        formData.append('name4', this.state.name4);\n        formData.append('comment4', this.state.comment4);\n        formData.append('name5', this.state.name5);\n        formData.append('comment5', this.state.comment5);\n        console.log(this.state.body_images);\n        \n        const config = {\n            'content-type': 'multipart/form-data'\n        }\n\n        return post(url, formData, config).then(res => {\n            alert('성공')\n          }).catch(err => {\n            console.log(err.message);\n        });\n   }\n    \n    addCommentsHandler = () => {\n        let commentsWrapper = document.querySelector(\".create--comments--wrapper\");\n        let comments = document.querySelector(\".create--comments\").cloneNode(true);\n        let nameInput = comments.childNodes[0].childNodes[1];\n        let impressionInput = comments.childNodes[1].childNodes[1];\n        this.setState((prevState) => {\n            index: ++prevState.index\n        })\n        nameInput.setAttribute(\"name\", \"name\" + this.state.index);\n        nameInput.addEventListener(\"change\", this.handleValueChange);\n        nameInput.value = \"\";\n        impressionInput.setAttribute(\"name\", \"comment\" + this.state.index);\n        impressionInput.addEventListener(\"change\", this.handleValueChange);\n        impressionInput.value = \"\";\n\n        commentsWrapper.appendChild(comments);\n    }\n\n    render() {\n        const nameRef=createRef();\n\n        function checkLogin() {\n            if(this.state.loginresult === false){\n                window.location.href = '/';\n            }\n        }\n\n        return (\n            \n            <div className={style.form_wrapper}>\n                <h3>프로젝트 내용 수정하기</h3>\n                <form className={style.inputform} onSubmit={this.handleFormModifySubmit} method=\"post\"> \n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            <label>프로젝트 제목</label>\n                            <input type=\"text\" name=\"title\" className=\"form-control\" placeholder=\"제목\" value={this.state.title} onChange={this.handleValueChange}/>\n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <label>사용 프레임워크</label>\n                            <input type=\"text\" name=\"framework\" value={this.state.framework} className=\"form-control\" placeholder=\"쉼표(,)로 구분하여 입력해 주세요.\" onChange={this.handleValueChange}/>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            <label>팀명</label>\n                            <input type=\"text\" name=\"team\" className=\"form-control\" placeholder=\"팀명\" value={this.state.team} onChange={this.handleValueChange}/>\n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <label>프로젝트 Github URL</label>\n                            <input type=\"text\" name=\"git_url\" value={this.state.git_url} className=\"form-control\" placeholder=\"Github URL\" onChange={this.handleValueChange}/>\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-6\">\n                            <label>진행 기간</label>\n                            <input type=\"text\" name=\"period\" className=\"form-control\" placeholder=\"제목\" value={this.state.period} onChange={this.handleValueChange}/>\n                        </div>\n                        <div className=\"form-group col-md-6\">\n                        <label>대표 이미지</label>\n                            <input type=\"file\" name=\"body_images\" id=\"body_images\" file={this.state.body_images} className=\"form-control\" onChange={this.handleFileChange} ref={this.fileInput}/>\n                        </div>\n                    </div>\n                    <div className={\"form-group \" + style.form_textarea}>\n                        <label>프로젝트에 대해 한 문장으로 간략하게 설명해 주세요.</label>\n                        <textarea className=\"form-control\" name=\"summary\" value={this.state.summary} rows=\"1\" onChange={this.handleValueChange}></textarea>\n                    </div>\n                    <div className={\"form-group\" + style.form_textarea}>\n                        <label>프로젝트에 대해 자세하게 설명해 주세요.</label>\n                        <textarea className=\"form-control\" name=\"body_text\" value={this.state.body_text} rows=\"20\" onChange={this.handleValueChange}></textarea>\n                    </div>\n                    <div className={\"form-group create--comments--wrapper\" + style.form_textarea}>\n                        <label>이 프로젝트에 참가한 팀원들의 소감을 들려주세요. 오른쪽의 + 버튼을 눌러 팀원을 추가할 수 있습니다. (최대 5명)</label>\n                        <button type=\"button\" onClick={this.addCommentsHandler} className=\"btn create--comments--addbtn\">+</button>\n                        <div className=\"create--comments\" key=\"1\">\n                            <div className=\"form-group create--bodytext\">\n                                <label>이름</label>\n                                <input type=\"text\" name=\"name1\" className=\"form-control create--comment--name\" placeholder=\"이름\" onChange={this.handleValueChange}/>\n                            </div>\n                            <div className=\"form-group create--bodytext\">\n                                <label>소감</label>\n                                <textarea className=\"form-control create--comment--impression\" name=\"comment1\"  onChange={this.handleValueChange}></textarea>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={style.btn_wrapper}>\n                        <button type=\"submit\" className={\"btn btn-primary\" + style.btn_spacer}>수정 완료</button>\n                        <button type=\"button\" className=\"btn btn-secondary\">취소</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default UpdateProject;","/Users/soo/dev/solchive/solchive/src/components/Projects/DeleteProject/DeleteProject.js",[],"/Users/soo/dev/solchive/solchive/src/components/Projects/CreateProject/CreateProject.js",["96","97","98"],"/Users/soo/dev/solchive/solchive/src/components/Main/ProjectList.js",["99"],"import React, { Component } from 'react';\nimport style from './MainStyle.module.css';\nimport ProjectWrapperByYear from './ProjectWrapperByYear';\n\nclass ProjectList extends Component {\n    state = {\n        projects: [],\n        sortedProjects: {},\n        onUpdate: () => console.warn('onUpdate not defined'),\n    }\n\n    async componentDidMount() {\n        // async await 아직도 이해 못함 ...\n        await this.callAPI().then(\n            res => {\n                this.setState({projects: res});\n            }).catch(\n                error => { console.log(error);\n            }\n        );\n        // 초기화\n        const arr = [];\n        this.state.projects.forEach((info) => {\n            if (!arr.includes(info.period))\n                arr.push(info.period);\n        });\n\n        arr.forEach((year) => {\n            this.state.sortedProjects[year] = [];\n            const nextState = JSON.parse(JSON.stringify(this.state.sortedProjects));\n            this.setState({ sortedProjects: nextState });\n        })\n\n        this.state.projects.forEach((info) => {\n            this.state.sortedProjects[info.period] = [\n                ...this.state.sortedProjects[info.period],\n                info,\n            ];\n            const nextState = JSON.parse(JSON.stringify(this.state.sortedProjects));\n            this.setState({ sortedProjects: nextState });\n        })\n    }\n\n    callAPI = async () => {\n        const res = await fetch('/api/project');\n        const body = await res.json();\n        return body;\n    }\n\n    render() {\n        const{ onUpdate } = this.props;\n\n        return (\n            <div className={style.project_wrapper}>\n                {Object.keys(this.state.sortedProjects).map((year, key) => {\n                    return (\n                        <ProjectWrapperByYear\n                        year={year}\n                        data={this.state.sortedProjects[year]}\n                        key={key}\n                        />\n                    );\n                })}\n            </div>\n        );\n    }    \n}\n\nexport default ProjectList;","/Users/soo/dev/solchive/solchive/src/components/Main/ProjectListItem.js",["100"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './MainStyle.module.css';\n\nclass ProjectListItem extends Component {\n    render() {\n        const { id, title, team, summary, body_images } = this.props.info;\n        return (\n            <div className={style.project_item}>\n                <Link to={`/projects/${id}`}>\n                    <div className={style.project_contents}>\n                        <div className={style.project_textarea}>\n                            <div className={style.project_title_wrapper}>\n                                <h4 className={style.project_title}>{title}</h4>\n                            </div>\n                        </div>\n                        <div className={style.project_image_wrapper}>\n                            <img src={'/upload/'+ body_images}/>\n                        </div>\n                    </div>\n                    <div className={style.project_item_hover}>\n                        <h4 className={style.project_title}>{title}</h4>\n                        <div className={style.project_details}>\n                            <span className={style.project_team}>{team}</span>\n                        </div>\n                        <p className={style.project_description}>{summary}</p>\n                    </div>\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default ProjectListItem;","/Users/soo/dev/solchive/solchive/src/components/Auth/Login.js",["101","102","103"],"import React, { Component } from 'react';\nimport style from './Login.module.css';\n\nclass Login extends Component {\n    constructor(props){\n\t\tsuper(props);\n\t\tthis.state ={\n\t\t\tuser_id:'',\n\t\t\tuser_pw:''\n\t\t};\n\n\t\tthis.handleValueChange = this.handleValueChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.projectLogin = this.projectLogin.bind(this);\n\t}\n\n    handleSubmit(e){\n\n        e.preventDefault();\n        this.projectLogin().then((res) => {\n            console.log(res.data);\n        });\n\n    }\n    \n    projectLogin = async () => {\n        const url = 'http://localhost:5000/chkserver';\n\n        let userInfo={\n            'user_id':this.state.user_id,\n            'user_pw':this.state.user_pw\n        };\n\n        fetch(url,{\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(userInfo)\n            \n        })\n        .then((response)=>{\n            return response.json();\n        })\n        .then((res)=>{\n            if(res.loginresult){\n                alert(\"로그인에 성공했습니다.\");\n                window.location.href = '/';\n            }\n            else{\n                alert(\"일치하는 ID와 PW가 없습니다.\");\n                window.location.href = '/login';\n            }\n        });\n    }\n\n    handleValueChange(e) {\n        let nextState = {};\n        nextState[e.target.name] = e.target.value;\n        this.setState(nextState);\n        console.log(this.state);\n    }\n\n    render() {\n\n        const containerStyle = {\n            textAlign: \"center\",\n            padding: \"50px\"\n        }\n\n        const headTitlestyle ={\n            margin: \"30px\",\n        }\n\n        const loginAreastyle = {\n            margin: \"5px\",\n            width: \"300px\",\n            height: \"35px\"\n        }\n\n        return (\n            <div className=\"wrapper\">\n                <div className={style.container}>\n                    <h1 className={style.head_style}>Welcome to SOLCHIVE!</h1>\n                    <form className=\"loginForm\">\n                        <div>\n                            <input \n                                name=\"user_id\"  \n                                value={this.state.user_id} \n                                onChange={this.handleValueChange}\n                                className={style.login_input}\n                                type=\"text\" \n                                placeholder=\"User ID\" \n                            />\n                        </div>\n                        <div>\n                            <input \n                                name=\"user_pw\"  \n                                value={this.state.user_pw} \n                                onChange={this.handleValueChange}\n                                className={style.login_input} \n                                type=\"password\" \n                                placeholder=\"User PW\" \n                            />\n                        </div>\n                        <div>\n                            <button\n                                className={style.login_input}\n                                type=\"submit\" onClick={this.projectLogin}\n                                id=\"login_btn\">\n                                Login\n                            </button>\n                        </div>\n                    </form>\n                </div>\n                \n            </div>\n        );\n    }\n}\n\nexport default Login;\n","/Users/soo/dev/solchive/solchive/src/components/Sections/Footer.js",[],"/Users/soo/dev/solchive/solchive/src/components/Sections/Header.js",[],"/Users/soo/dev/solchive/solchive/src/components/Main/Main.js",[],"/Users/soo/dev/solchive/solchive/src/components/Main/MainHeader.js",[],"/Users/soo/dev/solchive/solchive/src/components/Main/ProjectWrapperByYear.js",[],"/Users/soo/dev/solchive/solchive/src/components/Projects/Question/Question.js",[],"/Users/soo/dev/solchive/solchive/src/components/Projects/QuestionIndex/QuestionIndex.js",["104","105","106","107"],"import React, { Component } from 'react';\nimport style from './QuestionIndex.module.css';\n\nclass QuestionIndex extends Component {\n    render() {\n        onscroll = () => {\n            var nVscroll = document.documentElement.scrollTop || document.body.scrollTop;\n            if (nVscroll > 190) {\n                document.querySelector('.' + style.questionindex_wrapper).style.position = 'fixed';\n            } else {\n                document.querySelector('.' + style.questionindex_wrapper).style.position = 'relative';\n            }\n        }\n        return (\n            <div className={style.questionindex_wrapper}>\n                <a className={style.question}>👷🏻 어떤 프레임워크를 사용했나요?</a>\n                <a className={style.question}>👀 프로젝트에 대해 간단하게 설명해 주세요!</a>\n                <a className={style.question}>😇 개발하면서 가장 힘들었던 점은 무엇이었나요?</a>\n                <a className={style.question}>💬 프로젝트 참여 후기를 들려주세요!</a>\n            </div>\n        );\n    }\n}\n\nexport default QuestionIndex;","/Users/soo/dev/solchive/solchive/src/components/Projects/Impression/ImpressionList.js",["108"],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":69,"column":29,"nodeType":"119","endLine":69,"endColumn":110},{"ruleId":"120","severity":1,"message":"121","line":181,"column":13,"nodeType":"122","messageId":"123","endLine":181,"endColumn":37},{"ruleId":"124","severity":1,"message":"125","line":181,"column":13,"nodeType":"115","messageId":"126","endLine":181,"endColumn":18,"fix":"127"},{"ruleId":"113","severity":1,"message":"128","line":194,"column":15,"nodeType":"115","messageId":"116","endLine":194,"endColumn":22},{"ruleId":"113","severity":1,"message":"129","line":196,"column":18,"nodeType":"115","messageId":"116","endLine":196,"endColumn":28},{"ruleId":"113","severity":1,"message":"130","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":94,"column":13,"nodeType":"122","messageId":"123","endLine":94,"endColumn":37},{"ruleId":"124","severity":1,"message":"125","line":94,"column":13,"nodeType":"115","messageId":"126","endLine":94,"endColumn":18,"fix":"131"},{"ruleId":"113","severity":1,"message":"132","line":51,"column":16,"nodeType":"115","messageId":"116","endLine":51,"endColumn":24},{"ruleId":"117","severity":1,"message":"118","line":18,"column":29,"nodeType":"119","endLine":18,"endColumn":65},{"ruleId":"113","severity":1,"message":"133","line":66,"column":15,"nodeType":"115","messageId":"116","endLine":66,"endColumn":29},{"ruleId":"113","severity":1,"message":"134","line":71,"column":15,"nodeType":"115","messageId":"116","endLine":71,"endColumn":29},{"ruleId":"113","severity":1,"message":"135","line":75,"column":15,"nodeType":"115","messageId":"116","endLine":75,"endColumn":29},{"ruleId":"136","severity":1,"message":"137","line":16,"column":17,"nodeType":"119","endLine":16,"endColumn":47},{"ruleId":"136","severity":1,"message":"137","line":17,"column":17,"nodeType":"119","endLine":17,"endColumn":47},{"ruleId":"136","severity":1,"message":"137","line":18,"column":17,"nodeType":"119","endLine":18,"endColumn":47},{"ruleId":"136","severity":1,"message":"137","line":19,"column":17,"nodeType":"119","endLine":19,"endColumn":47},{"ruleId":"113","severity":1,"message":"138","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":13},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'QuestionIndex' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'index:' is defined but never used.","unused",{"range":"141","text":"142"},"'nameRef' is assigned a value but never used.","'checkLogin' is defined but never used.","'axios' is defined but never used.",{"range":"143","text":"142"},"'onUpdate' is assigned a value but never used.","'containerStyle' is assigned a value but never used.","'headTitlestyle' is assigned a value but never used.","'loginAreastyle' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'style' is defined but never used.","no-global-assign","no-unsafe-negation",[5939,5946],"",[3186,3193]]