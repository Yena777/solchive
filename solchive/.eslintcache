[{"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\index.js":"1","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\App.js":"2","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\reportWebVitals.js":"3","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Header.js":"4","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Footer.js":"5","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Project.js":"6","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\ProjectList.js":"7","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\CreateProject.js":"8","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\ProjectListItem.js":"9","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\DeleteProject.js":"10","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\UpdateProject.js":"11","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Main.js":"12","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\MainHeader.js":"13"},{"size":562,"mtime":1609917612015,"results":"14","hashOfConfig":"15"},{"size":781,"mtime":1609917611982,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1609395316757,"results":"17","hashOfConfig":"15"},{"size":608,"mtime":1609917611988,"results":"18","hashOfConfig":"15"},{"size":446,"mtime":1609917611986,"results":"19","hashOfConfig":"15"},{"size":3673,"mtime":1610002826476,"results":"20","hashOfConfig":"15"},{"size":1325,"mtime":1609917611991,"results":"21","hashOfConfig":"15"},{"size":6093,"mtime":1610005641231,"results":"22","hashOfConfig":"15"},{"size":1471,"mtime":1610005684993,"results":"23","hashOfConfig":"15"},{"size":675,"mtime":1609946024495,"results":"24","hashOfConfig":"15"},{"size":6718,"mtime":1609944401648,"results":"25","hashOfConfig":"15"},{"size":369,"mtime":1609917611988,"results":"26","hashOfConfig":"15"},{"size":862,"mtime":1609917611989,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"17fjwzv",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\index.js",[],["58","59"],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\App.js",["60"],"import './App.css';\r\nimport { Route } from 'react-router-dom'\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Project from './components/Project';\r\nimport ProjectList from './components/ProjectList';\r\nimport CreateProject from './components/CreateProject';\r\nimport UpdateProject from './components/UpdateProject';\r\nimport Main from './components/Main';\r\nimport \"./fonts/fonts.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n        <Header/>\r\n        <Route exact path=\"/\" component={Main}/>\r\n        <Route path=\"/projects/:id\" component={Project}/>\r\n        <Route path=\"/create\" component={CreateProject}/>\r\n        <Route path=\"/update\" component={UpdateProject}/>\r\n        <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\reportWebVitals.js",[],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Header.js",[],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Footer.js",[],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Project.js",["61","62","63"],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\ProjectList.js",["64"],"import React, { Component } from 'react';\r\nimport ProjectListItem from './ProjectListItem';\r\nimport UpdateProject from './UpdateProject';\r\n\r\nclass ProjectList extends Component {\r\n    state = {\r\n        projects: [],\r\n        onUpdate: () => console.warn('onUpdate not defined'),\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.callAPI().then(\r\n            res => {\r\n                this.setState({projects: res});\r\n            }).catch(\r\n                error => { console.log(error);\r\n            });\r\n    }\r\n\r\n    callAPI = async () => {\r\n        const res = await fetch('/api/project');\r\n        const body = res.json();\r\n        return body;\r\n    }\r\n\r\n    render() {\r\n        const{onUpdate} = this.props;\r\n\r\n        const projectList = this.state.projects.map(\r\n            info => (\r\n                <ProjectListItem \r\n                    info={info} \r\n                    key={info.id}\r\n                    onUpdate={onUpdate}\r\n                />)\r\n        );\r\n\r\n        const projectWrapperStyle = {\r\n            margin: \"2.4rem auto 0\",\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            width: \"90vw\"\r\n        };\r\n\r\n        return (\r\n            <div style={projectWrapperStyle}>\r\n                {projectList}\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default ProjectList;","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\CreateProject.js",[],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\ProjectListItem.js",["65","66","67"],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\DeleteProject.js",[],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\UpdateProject.js",["68"],"import React, { Component } from 'react';\r\n\r\nclass UpdateProject extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            title: \"\",\r\n            framework: \"\",\r\n            team: \"\",\r\n            git_url: \"\",\r\n            period: \"\",\r\n            body_images: \"\",\r\n            summary: \"\",\r\n            body_text: \"\",\r\n            id: \"\",\r\n        }\r\n        this.handleFormModifySubmit = this.handleFormModifySubmit.bind(this);\r\n        this.handleValueChange = this.handleValueChange.bind(this);\r\n        this.updateProject = this.updateProject.bind(this);\r\n\r\n    }\r\n\r\n    //처음에 this.props.state.title을 했다가 https://gongbu-ing.tistory.com/45을 참고하여 location 추가함.\r\n    componentDidMount(){\r\n        this.setState({\r\n            title: this.props.location.state.title,\r\n            framework: this.props.location.state.framework,\r\n            team: this.props.location.state.team,\r\n            git_url: this.props.location.state.git_url,\r\n            period: this.props.location.state.period,\r\n            body_images: this.props.location.state.body_images,\r\n            summary: this.props.location.state.summary,\r\n            body_text: this.props.location.state.body_text,\r\n            id: this.props.location.state.id,\r\n        })\r\n    }\r\n\r\n    handleFormModifySubmit(e){\r\n        e.preventDefault();\r\n        this.updateProject();\r\n        alert(\"수정 완료되었습니다.\");\r\n        //window.location.href = '/projects/${id}';\r\n    }\r\n\r\n    handleValueChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    updateProject = async () => {\r\n\r\n        const url = 'http://localhost:5000/api/update';\r\n\r\n        let formData = {\r\n            title: this.state.title,\r\n            framework: this.state.framework,\r\n            team: this.state.team,\r\n            git_url: this.state.git_url,\r\n            period: this.state.period,\r\n            body_images: this.state.body_images,\r\n            summary: this.state.summary,\r\n            body_text: this.state.body_text,\r\n            id: this.props.match.params.id,\r\n        };\r\n\r\n        let res = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(formData)\r\n        }).then((res) => {\r\n            if (res.ok) return res.json();\r\n            throw new Error('error');\r\n        }).then((data) => {\r\n            return data;\r\n        }).catch((error) => {\r\n            return console.log(error.message);\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const formStyle = {\r\n            width: \"82rem\",\r\n            margin: \"15px auto\",\r\n            padding: \"20px\"\r\n        }\r\n\r\n        const wrapperStyle = {\r\n            width: \"90rem\",\r\n            margin: \"0 auto\",\r\n        }\r\n\r\n        const textAreaStyle = {\r\n            display: \"block\",\r\n            margin: \"15px\",\r\n        }\r\n\r\n        const btnDivStyle = {\r\n            margin: \"5px\",\r\n            marginRight: \"15px\",\r\n            float: \"right\",\r\n        }\r\n\r\n        const btnStyle = {\r\n            margin: \"5px\",\r\n        }\r\n\r\n        return (\r\n            <div style={wrapperStyle}>\r\n                <h3>프로젝트 내용 수정하기</h3>\r\n                <form style={formStyle} onSubmit={this.handleFormModifySubmit} method=\"post\"> \r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>프로젝트 제목</label>\r\n                            <input type=\"text\" name=\"title\" className=\"form-control\" placeholder=\"제목\" value={this.state.title} onChange={this.handleValueChange}/>\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>사용 프레임워크</label>\r\n                            <input type=\"text\" name=\"framework\" value={this.state.framework} className=\"form-control\" placeholder=\"쉼표(,)로 구분하여 입력해 주세요.\" onChange={this.handleValueChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>팀명</label>\r\n                            <input type=\"text\" name=\"team\" className=\"form-control\" placeholder=\"팀명\" value={this.state.team} onChange={this.handleValueChange}/>\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>프로젝트 Github URL</label>\r\n                            <input type=\"text\" name=\"git_url\" value={this.state.git_url} className=\"form-control\" placeholder=\"Github URL\" onChange={this.handleValueChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>진행 기간</label>\r\n                            <input type=\"text\" name=\"period\" className=\"form-control\" placeholder=\"제목\" value={this.state.period} onChange={this.handleValueChange}/>\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>대표 이미지</label>\r\n                            <input type=\"text\" name=\"body_images\" value={this.state.body_images} className=\"form-control\" onChange={this.handleValueChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\" style={textAreaStyle}>\r\n                        <label>프로젝트에 대해 한 문장으로 간략하게 설명해 주세요.</label>\r\n                        <textarea className=\"form-control\" name=\"summary\" value={this.state.summary} rows=\"1\" onChange={this.handleValueChange}></textarea>\r\n                    </div>\r\n                    <div className=\"form-group\" style={textAreaStyle}>\r\n                        <label>프로젝트에 대해 자세하게 설명해 주세요.</label>\r\n                        <textarea className=\"form-control\" name=\"body_text\" value={this.state.body_text} rows=\"20\" onChange={this.handleValueChange}></textarea>\r\n                    </div>\r\n                    <div style={btnDivStyle}>\r\n                        <button type=\"submit\" className=\"btn btn-primary\" style={btnStyle}>수정 완료</button>\r\n                        <button type=\"button\" className=\"btn btn-secondary\">취소</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateProject;","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Main.js",[],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\MainHeader.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":6,"column":8,"nodeType":"75","messageId":"76","endLine":6,"endColumn":19},{"ruleId":"73","severity":1,"message":"77","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":23},{"ruleId":"73","severity":1,"message":"78","line":6,"column":8,"nodeType":"75","messageId":"76","endLine":6,"endColumn":21},{"ruleId":"79","severity":1,"message":"80","line":48,"column":25,"nodeType":"81","endLine":48,"endColumn":69},{"ruleId":"73","severity":1,"message":"78","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":21},{"ruleId":"73","severity":1,"message":"82","line":5,"column":34,"nodeType":"75","messageId":"76","endLine":5,"endColumn":40},{"ruleId":"73","severity":1,"message":"83","line":5,"column":51,"nodeType":"75","messageId":"76","endLine":5,"endColumn":62},{"ruleId":"79","severity":1,"message":"80","line":16,"column":29,"nodeType":"81","endLine":16,"endColumn":56},{"ruleId":"73","severity":1,"message":"84","line":68,"column":13,"nodeType":"75","messageId":"76","endLine":68,"endColumn":16},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'ProjectList' is defined but never used.","Identifier","unusedVar","'ProjectListItem' is defined but never used.","'UpdateProject' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'period' is assigned a value but never used.","'body_images' is assigned a value but never used.","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]